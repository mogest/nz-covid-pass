require 'test/unit'
require_relative '../lib/nz_covid_pass.rb'

class TestCovidPasses < Test::Unit::TestCase
  def test_valid_pass
    code

    covid_pass = NZCovidPass.new(code, allow_test_issuers: true, cache: cache)

    assert_equal("Jack", covid_pass.given_name)
    assert_equal("Sparrow", covid_pass.family_name)
    assert_equal("1960-04-16", covid_pass.dob.to_s)
    assert_equal("urn:uuid:60a4f54d-4e30-4332-be33-ad78b1eafa4b", covid_pass.jti)
  end

  def test_bad_public_key
    code

    assert_raise(COSE::Error) do
      NZCovidPass.new(code, allow_test_issuers: true, cache: cache)
    end
  end

  def test_public_key_not_found
    code

    assert_raise(NZCovidPass::ParseError, "No matching verification method found in did document") do
      NZCovidPass.new(code, allow_test_issuers: true, cache: cache)
    end
  end

  def test_modified_signature
    code

    assert_raise(COSE::Error) do
      NZCovidPass.new(code, allow_test_issuers: true, cache: cache)
    end
  end

  def test_modified_payload
    code

    assert_raise(COSE::Error) do
      NZCovidPass.new(code, allow_test_issuers: true, cache: cache)
    end
  end

  def test_expired_pass
    code

    assert_raise(NZCovidPass::ExpiredError) do
      NZCovidPass.new(code, allow_test_issuers: true, cache: cache)
    end
  end

  def test_not_active_pass
    code = "NZCP:/1/2KCEVIQEIVVWK6JNGEASNICZAEP2KALYDZSGSZB2O5SWEOTOPJRXALTDN53GSZBRHEXGQZLBNR2GQLTOPICRU2XI5UFQIGTMZIQIWYTWMOSGQQDDN5XHIZLYOSBHQJTIOR2HA4Z2F4XXO53XFZ3TGLTPOJTS6MRQGE4C6Y3SMVSGK3TUNFQWY4ZPOYYXQKTIOR2HA4Z2F4XW46TDOAXGG33WNFSDCOJONBSWC3DUNAXG46RPMNXW45DFPB2HGL3WGFTXMZLSONUW63TFGEXDALRQMR2HS4DFQJ2FMZLSNFTGSYLCNRSUG4TFMRSW45DJMFWG6UDVMJWGSY2DN53GSZCQMFZXG4LDOJSWIZLOORUWC3CTOVRGUZLDOSRWSZ3JOZSW4TTBNVSWISTBMNVWUZTBNVUWY6KOMFWWKZ2TOBQXE4TPO5RWI33CNIYTSNRQFUYDILJRGYDVA27NR3GFF4CCGWF66QGMJSJIF3KYID3KTKCBUOIKIC6VZ3SEGTGM3N2JTWKGDBAPLSG76Q3MXIDJRMNLETOKAUTSBOPVQEQAX25MF77RV6QVTTSCV2ZY2VMN7FATRGO3JATR"

    assert_raise(NZCovidPass::NotYetValidError) do
      NZCovidPass.new(code, allow_test_issuers: true, cache: cache)
    end
  end

  private

  def cache
    {"nzcp.covid19.health.nz"=>{"@context"=>"https://w3.org/ns/did/v1", "id"=>"did:web:nzcp.covid19.health.nz", "verificationMethod"=>[{"id"=>"did:web:nzcp.covid19.health.nz#key-1", "controller"=>"did:web:nzcp.covid19.health.nz", "type"=>"JsonWebKey2020", "publicKeyJwk"=>{"kty"=>"EC", "crv"=>"P-256", "x"=>"zRR-XGsCp12Vvbgui4DD6O6cqmhfPuXMhi1OxPl8760", "y"=>"Iv5SU6FuW-TRYh5_GOrJlcV_gpF_GpFQhCOD8LSk3T0"}}], "assertionMethod"=>["did:web:nzcp.covid19.health.nz#key-1"]}}
  end
end
